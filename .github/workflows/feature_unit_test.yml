name: (Development) feature branch perform unit test

on:
  push:
    branches: 
        - 'ci-*'
        - 'feature-*'
        - 'fix-*'
        - 'refactor-*'
        - 'test-*'
        - 'chore-*'
        - 'build-*'

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    services:
      docker: 
        image: docker:24.0.6
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set env vars
        env:
          ENV: ${{ vars.ENV }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_USER: ${{ vars.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          DATABASE_PORT: ${{ vars.DATABASE_PORT }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SERPAPI_API_KEY: ${{ secrets.SERPAPI_API_KEY }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          CELERY_BROKER_URL: ${{ vars.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ vars.CELERY_RESULT_BACKEND}}
          REDIS_URL: ${{ vars.REDIS_URL}}

        run: |
          cat <<EOF > backend/.env
          ENV=${ENV}
          DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
          DATABASE_NAME=${DATABASE_NAME}
          DATABASE_USER=${DATABASE_USER}
          DATABASE_PASSWORD=${DATABASE_PASSWORD}
          DATABASE_HOST=${DATABASE_HOST}
          DATABASE_PORT=${DATABASE_PORT}
          OPENAI_API_KEY=${OPENAI_API_KEY}
          SERPAPI_API_KEY=${SERPAPI_API_KEY}
          CELERY_BROKER_URL=${CELERY_BROKER_URL}
          CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
          REDIS_URL=${REDIS_URL}
          EOF
          
          mkdir -p backend/conf/test
          cat <<EOF > backend/conf/test/.env
          POSTGRES_DB=${POSTGRES_DB}
          POSTGRES_USER=${POSTGRES_USER}
          POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          EOF

      - name: Run tests
        run: |
          docker compose -f docker-compose-test.yml up --build --abort-on-container-exit --exit-code-from web
        working-directory: ./backend

      - name: Tear down
        if: always()
        run: |
          docker compose -f docker-compose-test.yml down --volumes
        working-directory: ./backend
